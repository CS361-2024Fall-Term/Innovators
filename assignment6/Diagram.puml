@startuml

class User {
  +Name: String
  +University: String
  +Age: int
  +Major: String
  +Dark_mode: Boolean
  +Font_size: int
  +set_name(params:String): void
  +set_uni(param: String): void
  +set_age(param: int): void
  +set_major(param: String): void
  +set_fsize(param: int): void
  +set_mode(param: boolean): void
  +get_name(): String
  +get_uni(): String
  +get_age(): int
  +get_major(): String
  +get_fsize(): int
  +get_mode(): Boolean
 
}

class Calendar {
  +unique_id: int  
  +task_amount: int
  +event_amount: int
  +add_task(): createTask()
  +remove_task(param: taskID): void
  +editT_task(param: eventID): void
  +add_event(): create_event()
  +remove_event(param: eventID): void
  +edit_event(param: eventID): void
  +get_tasks_by_date(date: Date): List <Tasks>
  +get_tasks_by_name(string: Name): List <Tasks>
  +get_events_by_date(): get_events_by_date()
  +get_events_by_name(): get_events_by_name()
  +get_events_by_location(): get_events_by_location()
}

class Task {
  +unique_id: int
  +title: string
  +description: string
  +due_date: Date
  +priority: int
  +status: int
  +create_task(params: int, string, string, Date): int
  +set_title(param: String): void
  +set_date(param: Date): void
  +set_description(param: String): void
  +set_priority(param: int): void
  +complete(): void
  +get_status(): int
  +get_due_date(): Date
}

class Category {
  +title: String
  +color: String
}

class Notification {
  +unique_id: int  
  +date: Date
  +alert: string
  
  +set_reminder_time(param: Date): void
  +set_alert(param: string): void
  +get_tasks_by_date(): List<Task>
  +get_task_name(param: Task): void
  +get_task_status(param: Task): void
  +get_events_by_date(): List<Task>
  +get_event_name(param: Task): void
  +get_event_status(param: Task): void
  +create_feedback(param: Task): void
  +display_notification(): void
}

class Event {
  +unique_id: int  
  +name: string
  +description: string
  +start_time: Date
  +end_time: Date
  +location: string
  +create_event(string, string, string, string, Date, Date): int
  +set_name(param: string): void
  +set_description(param: string): void
  +set_location(param: string): void
  +set_start_time(param: Date): void
  +set_end_time(param: Date): void
  +get_events_by_name(): List<Event>
  +get_events_by_date(): List<Event>
  +get_events_by_location(): List<Event>
}

class Daily_Overview {
    -unique_id: int
    -date: Date
    -tasks_for_today: list<tasks>
    -overview_prompt: String

    +display_overview_prompt(): void
    +get_tasks_for_today(calendar: get_tasks_by_date()): List<Task>
    +sort_tasks_by_priority(): void
    +sort_tasks_by_due_time(): void
    +add_relevant_info(param: String): void
}

class Management {
  +manage_user(): void
  +manage_calendar(): void
  +create_tasks(param: Task): void
  +create_events(param: Event): void
  +send_notifications(): void
}

Management -- User
Management -- Calendar
Management -- Task
Management -- Event
Management -- Notification

Calendar "1" -- "1" User
Calendar "1" *-- "0 *" Task
Calendar "1" <.. "1" DailyOverview : uses
Calendar "1" *-- "0 *" Event
Task "0" *-- "1" Category


@enduml
